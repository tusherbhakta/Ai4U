// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String      @id @default(uuid())
  clerkUserId    String      @unique
  email          String      @unique
  name           String?
  imageUrl       String?
  industry       String?

  industryInsights IndustryInsights? @relation(fields: [industry], references: [industry])
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt

  // profile fileds 
  bio            String?
  experience     Int?
  skills         String[]

  assessment     Assessment[]
  resume         Resume?
  coverLetter    CoverLetter[]
}

model Assessment {
  id             String      @id @default(cuid())
  userId         String
  user           User        @relation(fields: [userId], references: [id])
  quizScore      Float
  questions      Json[]
  category       String
  improvementTip String?
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt

  @@index([userId])

}

model Resume {
  id             String      @id @default(cuid())
  userId         String      @unique
  user           User        @relation(fields: [userId], references: [id])
  content        String      @db.Text
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
}

model CoverLetter {
  id             String      @id @default(cuid())
  userId         String      @unique
  user           User        @relation(fields: [userId], references: [id])
  content        String     
  jobDescription String?
  companyName    String
  jobTitle       String
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt

  @@index([userId])
}
model IndustryInsights {
  id             String      @id @default(cuid())
  industry       String      @unique

// users in this industry 
  users          User[]

  // salary data 
  salaryRange    Json[]

  // Industry Trends 
  growthRate     Float
  demandLevel    DemandLevel
  topSkills      String[]

  // market conditions 
  marketOutlook  MarketOutlook
  keyTrends       String[]

  // learning suggestions 
  recomendedSkills String[]


  lastUpdated    DateTime    @default(now())
  nextUpdate      DateTime 

  @@index([industry])
}

enum DemandLevel {
  HIGH
  MEDIUM
  LOW
}
enum MarketOutlook {
  POSITIVE
  NEUTRAL
  NEGATIVE
}